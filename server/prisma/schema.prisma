generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  STARTED
  PLACED_AND_PAID
  PREPARING
  READY_FOR_PICKUP
  PICKED_UP
}

enum DietType {
  VEGGIE
  VEGAN
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  products    Product[]
  image       Image?    @relation(fields: [imageId], references: [id])
  imageId     Int?

  @@map("categories")
}

model Image {
  id          Int        @id @default(autoincrement())
  filename    String     @db.VarChar(255)
  description String?    @db.VarChar(255)
  products    Product[]
  Category    Category[]

  @@map("images")
}

model Order {
  id            Int            @id @default(autoincrement())
  orderStatus   OrderStatus
  pickupNumber  Int            @map("pickup_number")
  price         Decimal        @db.Decimal(10, 2)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  orderProducts OrderProduct[]

  @@map("orders")
}

model OrderProduct {
  orderId   Int     @map("order_id")
  productId Int     @map("product_id")
  price     Decimal @db.Decimal(10, 2)
  quantity  Int

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([orderId, productId])
  @@map("order_products")
}

model Product {
  id         Int      @id @default(autoincrement())
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  image      Image?   @relation(fields: [imageId], references: [id], onDelete: SetNull)
  imageId    Int?
  price      Decimal  @db.Decimal(10, 2)
  kcal       Int
  available  Boolean  @default(true)
  dietType   DietType @default(VEGGIE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderProducts       OrderProduct[]
  productTranslations ProductTranslation[]

  @@index([categoryId])
  @@index([imageId])
  @@map("products")
}

model Language {
  id   Int    @id @default(autoincrement())
  code String @unique @db.VarChar(10)
  name String @db.VarChar(50)

  productTranslations ProductTranslation[]

  @@map("languages")
}

model ProductTranslation {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   Int
  language    Language @relation(fields: [languageId], references: [id], onDelete: Cascade)
  languageId  Int
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)

  @@unique([productId, languageId])
  @@map("product_translations")
}